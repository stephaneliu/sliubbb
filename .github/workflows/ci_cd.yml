name: Test and deploy

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install yarn
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install

      - name: Run Prettier
        run: |
          sudo yarn install
          sudo yarn prettier --check '**/*.rb'

  rubocop:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.6

      - name: Cache Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Rubocop
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run Rubocop
        env:
          RAILS_ENV: test
          RlAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          bundle exec rubocop

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11@sha256:85d79cba2d4942dad7c99f84ec389a5b9cc84fb07a3dcd3aff0fb06948cdc03b
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: --entrypoint redis-server

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.6

      - name: Install yarn
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install

      - name: Cache Bundler
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Run tests
        env:
          PGUSER: postgres
          PG_PASSWORD: postgres
          REDIS_URL: redis://localhost:6379/0
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        run: |
          sudo apt-get -yqq install libpq-dev
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:prepare
          bundle exec rspec spec

  deploy_staging:
    runs-on: ubuntu-latest

    needs: [lint, rubocop, test]
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Deploy sliubbb-stagging
        env:
          HEROKU_API_KEY: ${{ SECRETS.HEROKU_API_KEY }}
        run: |
          sudo apt-get -yqq install apt-transport-https python3-software-properties
          curl https://cli-assets.heroku.com/install.sh | sudo sh
          sudo gem install dpl
          sudo dpl --provider=heroku --app=sliubbb-staging --api-key=$HEROKU_API_KEY
          heroku run rake db:migrate --exit-code --app sliubbb-staging

  deploy_production:
    runs-on: ubuntu-latest

    needs: [lint, rubocop, test]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Deploy sliubbb-production
        env:
          HEROKU_API_KEY: ${{ SECRETS.HEROKU_API_KEY }}
        run: |
          sudo apt-get -yqq install apt-transport-https python3-software-properties
          curl https://cli-assets.heroku.com/install.sh | sudo sh
          sudo gem install dpl
          sudo dpl --provider=heroku --app=sliubbb-production --api-key=$HEROKU_API_KEY
          heroku run rake db:migrate --exit-code --app sliubbb-production
